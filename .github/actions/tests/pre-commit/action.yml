---
#------------------------------------------------------------------------------
# Run pre-commit
#------------------------------------------------------------------------------
name: Test pre-commit
branding:
  icon: "git-pull-request"
  color: "orange"
inputs:
  python-version:
    description: "The version of Python to use, such as 3.11.0"
    required: true
    type: string
  github-token:
    description: "The GitHub token to use for pushing changes to the repository"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout code
      id: checkout
      uses: actions/checkout@v4

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: "20.9.0"

    - name: Install npm dev dependencies
      run: npm install

    - name: Check for pre-commit in requirements
      shell: bash
      run: |
        if ! grep -q "pre-commit" ./requirements.txt; then
          echo "pre-commit not found in requirements.txt" >&2
          exit 1
        fi

    - name: Check for black in requirements
      shell: bash
      run: |
        if ! grep -q "black" ./requirements.txt; then
          echo "black not found in requirements.txt" >&2
          exit 1
        fi

    - name: Check for flake8 in requirements
      shell: bash
      run: |
        if ! grep -q "flake8" ./requirements.txt; then
          echo "flake8 not found in requirements.txt" >&2
          exit 1
        fi

    - name: Check for flake8-coding in requirements
      shell: bash
      run: |
        if ! grep -q "flake8-coding" ./requirements.txt; then
          echo "flake8-coding not found in requirements.txt" >&2
          exit 1
        fi

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt

    - name: Run Black
      shell: bash
      run: |
        black .

    - name: Run Prettier
      shell: bash
      run: |
        prettier --write .

    - name: Lint commit and push
      id: lint-commit-and-push
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "chore: [gh] lint w black / prettier [skip ci]"
        git push https://${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    # see: https://pre-commit.ci/lite.html
    - name: pre-commit
      id: pre-commit
      shell: bash
      run: |
        pre-commit run --all-files --show-diff-on-failure
